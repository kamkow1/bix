//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /archive/ARCHIVE/sources/bix/src/bixc/BixLexer.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class BixLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		VAL=1, FNC=2, CLASS=3, STR_VAL=4, INT_VAL=5, FLT_VAL=6, ASSIGN=7, TERMINATOR=8, 
		COMMA=9, LPAREN=10, RPAREN=11, LBRACE=12, RBRACE=13, HASH=14, IDENTIFIER=15, 
		WHITESPACE=16, COMMENT=17, LINE_COMMENT=18;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"VAL", "FNC", "CLASS", "STR_VAL", "INT_VAL", "FLT_VAL", "ASSIGN", "TERMINATOR", 
		"COMMA", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "HASH", "IDENTIFIER", 
		"WHITESPACE", "COMMENT", "LINE_COMMENT"
	};


	public BixLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public BixLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'val'", "'fnc'", "'class'", null, null, null, "'='", null, "','", 
		"'('", "')'", "'{'", "'}'", "'#'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "VAL", "FNC", "CLASS", "STR_VAL", "INT_VAL", "FLT_VAL", "ASSIGN", 
		"TERMINATOR", "COMMA", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "HASH", 
		"IDENTIFIER", "WHITESPACE", "COMMENT", "LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "BixLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static BixLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x14', '\x8D', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\a', '\x5', '\x38', '\n', '\x5', '\f', '\x5', '\xE', 
		'\x5', ';', '\v', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x5', 
		'\x6', '@', '\n', '\x6', '\x3', '\x6', '\x6', '\x6', '\x43', '\n', '\x6', 
		'\r', '\x6', '\xE', '\x6', '\x44', '\x3', '\a', '\x5', '\a', 'H', '\n', 
		'\a', '\x3', '\a', '\x6', '\a', 'K', '\n', '\a', '\r', '\a', '\xE', '\a', 
		'L', '\x3', '\a', '\x3', '\a', '\a', '\a', 'Q', '\n', '\a', '\f', '\a', 
		'\xE', '\a', 'T', '\v', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x5', '\t', '[', '\n', '\t', '\x3', '\n', '\x3', '\n', 
		'\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', 
		'\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', 
		'\x3', '\x10', '\a', '\x10', 'k', '\n', '\x10', '\f', '\x10', '\xE', '\x10', 
		'n', '\v', '\x10', '\x3', '\x11', '\x6', '\x11', 'q', '\n', '\x11', '\r', 
		'\x11', '\xE', '\x11', 'r', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\a', '\x12', '{', '\n', 
		'\x12', '\f', '\x12', '\xE', '\x12', '~', '\v', '\x12', '\x3', '\x12', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', 
		'\x3', '\x13', '\a', '\x13', '\x87', '\n', '\x13', '\f', '\x13', '\xE', 
		'\x13', '\x8A', '\v', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '|', 
		'\x2', '\x14', '\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', 
		'\a', '\r', '\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', 
		'\x17', '\r', '\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', 
		'!', '\x12', '#', '\x13', '%', '\x14', '\x3', '\x2', '\a', '\x6', '\x2', 
		'\f', '\f', '\xF', '\xF', '$', '$', '^', '^', '\x5', '\x2', '\x43', '\\', 
		'\x61', '\x61', '\x63', '|', '\x6', '\x2', '\x32', ';', '\x43', '\\', 
		'\x61', '\x61', '\x63', '|', '\x4', '\x2', '\v', '\v', '\"', '\"', '\x4', 
		'\x2', '\f', '\f', '\xF', '\xF', '\x2', '\x97', '\x2', '\x3', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'\'', '\x3', '\x2', '\x2', '\x2', '\x5', '+', '\x3', '\x2', '\x2', '\x2', 
		'\a', '/', '\x3', '\x2', '\x2', '\x2', '\t', '\x35', '\x3', '\x2', '\x2', 
		'\x2', '\v', '?', '\x3', '\x2', '\x2', '\x2', '\r', 'G', '\x3', '\x2', 
		'\x2', '\x2', '\xF', 'U', '\x3', '\x2', '\x2', '\x2', '\x11', 'Z', '\x3', 
		'\x2', '\x2', '\x2', '\x13', '\\', '\x3', '\x2', '\x2', '\x2', '\x15', 
		'^', '\x3', '\x2', '\x2', '\x2', '\x17', '`', '\x3', '\x2', '\x2', '\x2', 
		'\x19', '\x62', '\x3', '\x2', '\x2', '\x2', '\x1B', '\x64', '\x3', '\x2', 
		'\x2', '\x2', '\x1D', '\x66', '\x3', '\x2', '\x2', '\x2', '\x1F', 'h', 
		'\x3', '\x2', '\x2', '\x2', '!', 'p', '\x3', '\x2', '\x2', '\x2', '#', 
		'v', '\x3', '\x2', '\x2', '\x2', '%', '\x84', '\x3', '\x2', '\x2', '\x2', 
		'\'', '(', '\a', 'x', '\x2', '\x2', '(', ')', '\a', '\x63', '\x2', '\x2', 
		')', '*', '\a', 'n', '\x2', '\x2', '*', '\x4', '\x3', '\x2', '\x2', '\x2', 
		'+', ',', '\a', 'h', '\x2', '\x2', ',', '-', '\a', 'p', '\x2', '\x2', 
		'-', '.', '\a', '\x65', '\x2', '\x2', '.', '\x6', '\x3', '\x2', '\x2', 
		'\x2', '/', '\x30', '\a', '\x65', '\x2', '\x2', '\x30', '\x31', '\a', 
		'n', '\x2', '\x2', '\x31', '\x32', '\a', '\x63', '\x2', '\x2', '\x32', 
		'\x33', '\a', 'u', '\x2', '\x2', '\x33', '\x34', '\a', 'u', '\x2', '\x2', 
		'\x34', '\b', '\x3', '\x2', '\x2', '\x2', '\x35', '\x39', '\a', '$', '\x2', 
		'\x2', '\x36', '\x38', '\n', '\x2', '\x2', '\x2', '\x37', '\x36', '\x3', 
		'\x2', '\x2', '\x2', '\x38', ';', '\x3', '\x2', '\x2', '\x2', '\x39', 
		'\x37', '\x3', '\x2', '\x2', '\x2', '\x39', ':', '\x3', '\x2', '\x2', 
		'\x2', ':', '<', '\x3', '\x2', '\x2', '\x2', ';', '\x39', '\x3', '\x2', 
		'\x2', '\x2', '<', '=', '\a', '$', '\x2', '\x2', '=', '\n', '\x3', '\x2', 
		'\x2', '\x2', '>', '@', '\a', '/', '\x2', '\x2', '?', '>', '\x3', '\x2', 
		'\x2', '\x2', '?', '@', '\x3', '\x2', '\x2', '\x2', '@', '\x42', '\x3', 
		'\x2', '\x2', '\x2', '\x41', '\x43', '\x4', '\x32', ';', '\x2', '\x42', 
		'\x41', '\x3', '\x2', '\x2', '\x2', '\x43', '\x44', '\x3', '\x2', '\x2', 
		'\x2', '\x44', '\x42', '\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\f', '\x3', '\x2', '\x2', '\x2', '\x46', 
		'H', '\a', '/', '\x2', '\x2', 'G', '\x46', '\x3', '\x2', '\x2', '\x2', 
		'G', 'H', '\x3', '\x2', '\x2', '\x2', 'H', 'J', '\x3', '\x2', '\x2', '\x2', 
		'I', 'K', '\x4', '\x32', ';', '\x2', 'J', 'I', '\x3', '\x2', '\x2', '\x2', 
		'K', 'L', '\x3', '\x2', '\x2', '\x2', 'L', 'J', '\x3', '\x2', '\x2', '\x2', 
		'L', 'M', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\x3', '\x2', '\x2', '\x2', 
		'N', 'R', '\a', '\x30', '\x2', '\x2', 'O', 'Q', '\x4', '\x32', ';', '\x2', 
		'P', 'O', '\x3', '\x2', '\x2', '\x2', 'Q', 'T', '\x3', '\x2', '\x2', '\x2', 
		'R', 'P', '\x3', '\x2', '\x2', '\x2', 'R', 'S', '\x3', '\x2', '\x2', '\x2', 
		'S', '\xE', '\x3', '\x2', '\x2', '\x2', 'T', 'R', '\x3', '\x2', '\x2', 
		'\x2', 'U', 'V', '\a', '?', '\x2', '\x2', 'V', '\x10', '\x3', '\x2', '\x2', 
		'\x2', 'W', 'X', '\a', '\xF', '\x2', '\x2', 'X', '[', '\a', '\f', '\x2', 
		'\x2', 'Y', '[', '\a', '\f', '\x2', '\x2', 'Z', 'W', '\x3', '\x2', '\x2', 
		'\x2', 'Z', 'Y', '\x3', '\x2', '\x2', '\x2', '[', '\x12', '\x3', '\x2', 
		'\x2', '\x2', '\\', ']', '\a', '.', '\x2', '\x2', ']', '\x14', '\x3', 
		'\x2', '\x2', '\x2', '^', '_', '\a', '*', '\x2', '\x2', '_', '\x16', '\x3', 
		'\x2', '\x2', '\x2', '`', '\x61', '\a', '+', '\x2', '\x2', '\x61', '\x18', 
		'\x3', '\x2', '\x2', '\x2', '\x62', '\x63', '\a', '}', '\x2', '\x2', '\x63', 
		'\x1A', '\x3', '\x2', '\x2', '\x2', '\x64', '\x65', '\a', '\x7F', '\x2', 
		'\x2', '\x65', '\x1C', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', '\a', 
		'%', '\x2', '\x2', 'g', '\x1E', '\x3', '\x2', '\x2', '\x2', 'h', 'l', 
		'\t', '\x3', '\x2', '\x2', 'i', 'k', '\t', '\x4', '\x2', '\x2', 'j', 'i', 
		'\x3', '\x2', '\x2', '\x2', 'k', 'n', '\x3', '\x2', '\x2', '\x2', 'l', 
		'j', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\x3', '\x2', '\x2', '\x2', 
		'm', ' ', '\x3', '\x2', '\x2', '\x2', 'n', 'l', '\x3', '\x2', '\x2', '\x2', 
		'o', 'q', '\t', '\x5', '\x2', '\x2', 'p', 'o', '\x3', '\x2', '\x2', '\x2', 
		'q', 'r', '\x3', '\x2', '\x2', '\x2', 'r', 'p', '\x3', '\x2', '\x2', '\x2', 
		'r', 's', '\x3', '\x2', '\x2', '\x2', 's', 't', '\x3', '\x2', '\x2', '\x2', 
		't', 'u', '\b', '\x11', '\x2', '\x2', 'u', '\"', '\x3', '\x2', '\x2', 
		'\x2', 'v', 'w', '\a', '%', '\x2', '\x2', 'w', 'x', '\a', ',', '\x2', 
		'\x2', 'x', '|', '\x3', '\x2', '\x2', '\x2', 'y', '{', '\v', '\x2', '\x2', 
		'\x2', 'z', 'y', '\x3', '\x2', '\x2', '\x2', '{', '~', '\x3', '\x2', '\x2', 
		'\x2', '|', '}', '\x3', '\x2', '\x2', '\x2', '|', 'z', '\x3', '\x2', '\x2', 
		'\x2', '}', '\x7F', '\x3', '\x2', '\x2', '\x2', '~', '|', '\x3', '\x2', 
		'\x2', '\x2', '\x7F', '\x80', '\a', ',', '\x2', '\x2', '\x80', '\x81', 
		'\a', '%', '\x2', '\x2', '\x81', '\x82', '\x3', '\x2', '\x2', '\x2', '\x82', 
		'\x83', '\b', '\x12', '\x2', '\x2', '\x83', '$', '\x3', '\x2', '\x2', 
		'\x2', '\x84', '\x88', '\a', '%', '\x2', '\x2', '\x85', '\x87', '\n', 
		'\x6', '\x2', '\x2', '\x86', '\x85', '\x3', '\x2', '\x2', '\x2', '\x87', 
		'\x8A', '\x3', '\x2', '\x2', '\x2', '\x88', '\x86', '\x3', '\x2', '\x2', 
		'\x2', '\x88', '\x89', '\x3', '\x2', '\x2', '\x2', '\x89', '\x8B', '\x3', 
		'\x2', '\x2', '\x2', '\x8A', '\x88', '\x3', '\x2', '\x2', '\x2', '\x8B', 
		'\x8C', '\b', '\x13', '\x2', '\x2', '\x8C', '&', '\x3', '\x2', '\x2', 
		'\x2', '\xE', '\x2', '\x39', '?', '\x44', 'G', 'L', 'R', 'Z', 'l', 'r', 
		'|', '\x88', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
